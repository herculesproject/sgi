openapi: 3.0.3
info:
  title: Sistema de Gestión Económica de Protección Industrial e Intelectual (SGEPII)
  description: |-
    Sistema de Gestión Económica de Protección Industrial e Intelectual

  version: 0.1.0

tags:
  - name: gastos-invencion
    description: Gastos invención
  - name: ingresos-invencion
    description: Ingresos invención

paths:
  /gastos-invencion:
    get:
      tags:
        - gastos-invencion
      summary: Devuelve la lista con los gastos asociados a una invención
      description: |-
        Listado de gastos asociados a una invención
      operationId: findAllGastosInvencion
      security:
        - bearerAuth: []
      x-sgi-return-page: true # Remplaza el List de la respuesta un Page
      parameters:
        - name: X-Page
          in: header
          description: Nº de pagina
          schema:
            minimum: 0
            type: integer
            format: int32
            example: 1
        - name: X-Page-Size
          in: header
          description: Nº de elementos por página
          schema:
            minimum: 0
            type: integer
            format: int32
            example: 5
        - name: q
          in: query
          required: true
          description: |-
            Criterios de busqueda en formato RSQL. 

            Se puede buscar por los siguientes campos:
            - invencionId
            - tipoOperacion

            El tipo de operación puede tomar los siguientes valores:
            - GAS (Ejecución económica - Gastos)
            - REP (Ejecución económica - Repartos - Gastos a deducir)

            Si el tipo de operación se informa con el valor GAS, se han de devolver todos los gastos asociados a la invención.

            Si por el contrario el tipo de operación es REP, se han de devolver del conjunto de gastos asociados a la invención únicamente aquellos que se deban tener en cuenta para el reparto de regalía
          schema:
            type: string
            example: invencionId==1;tipoOperacion=ik=GAS
        - name: s
          x-sgi-pageable: true # Sustituye este parametro en un Pageable al que se le pasa este parametro como ordenación.
          in: query
          description: |-
            Criterios de ordenación de la busqueda. 

            Nombre del campo por el que se ordena seguido de **asc** o **desc** para ordenar ascendente o descendentemente.
          schema:
            type: string
            example: id,asc
      responses:
        200:
          description: Devuelve la lista de gastos
          headers:
            X-Page-Count:
              description: Nº de páginas
              schema:
                type: integer
                example: 2
            X-Page-Total-Count:
              description: Nº de elementos en la página
              schema:
                type: integer
                example: 1
            X-Total-Count:
              description: Nº total de elementos
              schema:
                type: integer
                example: 6
            X-Page-Size:
              description: Nº de elementos por página
              schema:
                type: integer
                example: 5
            X-Page:
              description: Nº de página
              schema:
                type: integer
                example: 1
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DatoEconomicoOutput"
        204:
          description: No hay gastos para los criterios de busqueda utilizados.
        400:
          description: Parametros no validos

  /gastos-invencion/columnas:
    get:
      tags:
        - gastos-invencion
      summary: Devuelve la lista de columnas dinámicas de los gastos
      description: |-
        Devuelve la lista de columnas de los gastos
      operationId: findAllColumnasGastosInvencion
      security:
        - bearerAuth: []
      parameters:
        - name: q
          in: query
          required: true
          description: |-
            Criterios de busqueda en formato RSQL. 

            Se puede buscar por los siguientes campos:
            - invencionId
          schema:
            type: string
            example: invencionId==1
      responses:
        200:
          description: Devuelve la lista de columnas
          headers:
            X-Page-Count:
              description: Nº de páginas
              schema:
                type: integer
                example: 2
            X-Page-Total-Count:
              description: Nº de elementos en la página
              schema:
                type: integer
                example: 1
            X-Total-Count:
              description: Nº total de elementos
              schema:
                type: integer
                example: 6
            X-Page-Size:
              description: Nº de elementos por página
              schema:
                type: integer
                example: 5
            X-Page:
              description: Nº de página
              schema:
                type: integer
                example: 1
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ColumnaOutput"
        204:
          description: No hay columnas para los criterios de busqueda utilizados.
        400:
          description: Parametros no validos

  /gastos-invencion/{id}:
    get:
      tags:
        - gastos-invencion
      summary: Detalle del gasto de la invención
      description: Devuelve el detalle del gasto correspondiente al id
      operationId: findGastoInvencionById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Identificador del gasto de la invención
          required: true
          schema:
            type: string
            example: F1
      responses:
        200:
          description: Devuelve el detalle del gasto
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatoEconomicoDetalleOutput"
        404:
          description: Detalle del gasto no encontrado

  /ingresos-invencion:
    get:
      tags:
        - ingresos-invencion
      summary: Devuelve la lista con los ingresos asociados a una invención
      description: |-
        Listado de ingresos asociados a una invención. La asociación en el SGI se realizará a través de contratos de CSP (proyectos) y el identificador de proyecto a enviar al SGE ha de ser el del proyecto económico.
      operationId: findAllIngresosInvencion
      security:
        - bearerAuth: []
      x-sgi-return-page: true # Remplaza el List de la respuesta un Page
      parameters:
        - name: X-Page
          in: header
          description: Nº de pagina
          schema:
            minimum: 0
            type: integer
            format: int32
            example: 1
        - name: X-Page-Size
          in: header
          description: Nº de elementos por página
          schema:
            minimum: 0
            type: integer
            format: int32
            example: 5
        - name: q
          in: query
          required: true
          description: |-
            Criterios de busqueda en formato RSQL. 

            Se puede buscar por los siguientes campos:
            - proyectoId
          schema:
            type: string
            example: proyectoId==P1
        - name: s
          x-sgi-pageable: true # Sustituye este parametro en un Pageable al que se le pasa este parametro como ordenación.
          in: query
          description: |-
            Criterios de ordenación de la busqueda. 

            Nombre del campo por el que se ordena seguido de **asc** o **desc** para ordenar ascendente o descendentemente.
          schema:
            type: string
            example: id,asc
      responses:
        200:
          description: Devuelve la lista de ingresos
          headers:
            X-Page-Count:
              description: Nº de páginas
              schema:
                type: integer
                example: 2
            X-Page-Total-Count:
              description: Nº de elementos en la página
              schema:
                type: integer
                example: 1
            X-Total-Count:
              description: Nº total de elementos
              schema:
                type: integer
                example: 6
            X-Page-Size:
              description: Nº de elementos por página
              schema:
                type: integer
                example: 5
            X-Page:
              description: Nº de página
              schema:
                type: integer
                example: 1
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DatoEconomicoOutput"
        204:
          description: No hay ingresos para los criterios de busqueda utilizados.
        400:
          description: Parametros no validos

  /ingresos-invencion/columnas:
    get:
      tags:
        - ingresos-invencion
      summary: Devuelve la lista de columnas dinámicas de los ingresos
      description: |-
        Devuelve la lista de columnas de los ingresos
      operationId: findAllColumnasIngresosInvencion
      security:
        - bearerAuth: []
      parameters:
        - name: q
          in: query
          required: true
          description: |-
            Criterios de busqueda en formato RSQL. 

            Se puede buscar por los siguientes campos:
            - proyectoId
          schema:
            type: string
            example: proyectoId==P1
      responses:
        200:
          description: Devuelve la lista de columnas
          headers:
            X-Page-Count:
              description: Nº de páginas
              schema:
                type: integer
                example: 2
            X-Page-Total-Count:
              description: Nº de elementos en la página
              schema:
                type: integer
                example: 1
            X-Total-Count:
              description: Nº total de elementos
              schema:
                type: integer
                example: 6
            X-Page-Size:
              description: Nº de elementos por página
              schema:
                type: integer
                example: 5
            X-Page:
              description: Nº de página
              schema:
                type: integer
                example: 1
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ColumnaOutput"
        204:
          description: No hay columnas para los criterios de busqueda utilizados.
        400:
          description: Parametros no validos

components:
  schemas:
    ColumnaOutput:
      type: object
      properties:
        id:
          type: string
          example: C1
        nombre:
          type: string
          example: Columna 1
        acumulable:
          type: boolean
          example: false
    DatoEconomicoOutput:
      type: object
      properties:
        id:
          type: string
          example: D1
        tipo:
          type: string
          enum:
            - Gasto
            - Ingreso
          example: Gasto
        columnas:
          type: array
          items:
            type: object
            properties:
              clave:
                type: string
                example: C1
              valor:
                type: string
                example: Columna 1
                description: |-
                  El valor será un String salvo en aquellas columnas que sean acumulables (se tenga que hacer sumas sobre ellas) donde será de tipo Numérico (sin separador de miles y como separador decimal el punto)
    DatoEconomicoDetalleOutput:
      type: object
      properties:
        id:
          type: string
          example: D1
        documentos:
          type: array
          items:
            $ref: "#/components/schemas/DocumentoOutput"
    DocumentoOutput:
      type: object
      properties:
        id:
          type: string
          example: D1
        nombre:
          type: string
          example: Documento 1
        nombreFichero:
          type: string
          example: docucumento1.pdf

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, for documentation purposes only

