<?xml version="1.0" encoding="UTF-8"?>
<api context="/sgp" name="API-SGP" version="1.0.0" version-type="context" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="GET" url-mapping="/personas/fisica">
        <inSequence>
            <!--This is generated API skeleton.-->
            <!--Business Logic Goes Here-->
            <payloadFactory media-type="json">
                <format>[
    {
        "personaRef": "user-001",
        "fechaNacimiento": "2000-01-01",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-001",
        "profesional": {
            "personaRef": "user-001",
            "categoriaProfesional": "categoriaProfesional-001",
            "cuerpoProfesional": "cuerpoProfesional-001",
            "subcuerpoProfesional": "subcuerpoProfesional-001"
        }
    },
    {
        "personaRef": "user-002",
        "fechaNacimiento": "2000-01-02",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-002",
        "profesional": {
            "personaRef": "user-002",
            "categoriaProfesional": "categoriaProfesional-002",
            "cuerpoProfesional": "cuerpoProfesional-002",
            "subcuerpoProfesional": "subcuerpoProfesional-002"
        }
    },
    {
        "personaRef": "user-003",
        "fechaNacimiento": "2000-01-03",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-003",
        "profesional": {
            "personaRef": "user-003",
            "categoriaProfesional": "categoriaProfesional-003",
            "cuerpoProfesional": "cuerpoProfesional-003",
            "subcuerpoProfesional": "subcuerpoProfesional-003"
        }
    },
    {
        "personaRef": "user-004",
        "fechaNacimiento": "2000-01-04",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-004",
        "profesional": {
            "personaRef": "user-004",
            "categoriaProfesional": "categoriaProfesional-004",
            "cuerpoProfesional": "cuerpoProfesional-004",
            "subcuerpoProfesional": "subcuerpoProfesional-004"
        }
    },
    {
        "personaRef": "user-005",
        "fechaNacimiento": "2000-01-05",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-005",
        "profesional": {
            "personaRef": "user-005",
            "categoriaProfesional": "categoriaProfesional-005",
            "cuerpoProfesional": "cuerpoProfesional-005",
            "subcuerpoProfesional": "subcuerpoProfesional-005"
        }
    }
]</format>
                <args/>
            </payloadFactory>
            <send>
                <endpoint key="sgp-service"/>
            </send>
        </inSequence>
        <outSequence>
            <respond/>
        </outSequence>
        <faultSequence>
            <switch source="get-property('ERROR_CODE')">
                <case regex="101503|101504">
                    <payloadFactory media-type="json">
                        <format>[
    {
        "personaRef": "user-001",
        "fechaNacimiento": "2000-01-01",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-001",
        "profesional": {
            "personaRef": "user-001",
            "categoriaProfesional": "categoriaProfesional-001",
            "cuerpoProfesional": "cuerpoProfesional-001",
            "subcuerpoProfesional": "subcuerpoProfesional-001"
        }
    },
    {
        "personaRef": "user-002",
        "fechaNacimiento": "2000-01-02",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-002",
        "profesional": {
            "personaRef": "user-002",
            "categoriaProfesional": "categoriaProfesional-002",
            "cuerpoProfesional": "cuerpoProfesional-002",
            "subcuerpoProfesional": "subcuerpoProfesional-002"
        }
    },
    {
        "personaRef": "user-003",
        "fechaNacimiento": "2000-01-03",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-003",
        "profesional": {
            "personaRef": "user-003",
            "categoriaProfesional": "categoriaProfesional-003",
            "cuerpoProfesional": "cuerpoProfesional-003",
            "subcuerpoProfesional": "subcuerpoProfesional-003"
        }
    },
    {
        "personaRef": "user-004",
        "fechaNacimiento": "2000-01-04",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-004",
        "profesional": {
            "personaRef": "user-004",
            "categoriaProfesional": "categoriaProfesional-004",
            "cuerpoProfesional": "cuerpoProfesional-004",
            "subcuerpoProfesional": "subcuerpoProfesional-004"
        }
    },
    {
        "personaRef": "user-005",
        "fechaNacimiento": "2000-01-05",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-005",
        "profesional": {
            "personaRef": "user-005",
            "categoriaProfesional": "categoriaProfesional-005",
            "cuerpoProfesional": "cuerpoProfesional-005",
            "subcuerpoProfesional": "subcuerpoProfesional-005"
        }
    }
]</format>
                        <args/>
                    </payloadFactory>
                </case>
                <default/>
            </switch>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="GET" url-mapping="/personas/fisica/hasanypersonaref">
        <inSequence>
            <!--This is generated API skeleton.-->
            <!--Business Logic Goes Here-->
            <payloadFactory media-type="json">
                <format>[
    {
        "personaRef": "user-001",
        "fechaNacimiento": "2000-01-01",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-001",
        "profesional": {
            "personaRef": "user-001",
            "categoriaProfesional": "categoriaProfesional-001",
            "cuerpoProfesional": "cuerpoProfesional-001",
            "subcuerpoProfesional": "subcuerpoProfesional-001"
        }
    },
    {
        "personaRef": "user-002",
        "fechaNacimiento": "2000-01-02",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-002",
        "profesional": {
            "personaRef": "user-002",
            "categoriaProfesional": "categoriaProfesional-002",
            "cuerpoProfesional": "cuerpoProfesional-002",
            "subcuerpoProfesional": "subcuerpoProfesional-002"
        }
    },
    {
        "personaRef": "user-003",
        "fechaNacimiento": "2000-01-03",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-003",
        "profesional": {
            "personaRef": "user-003",
            "categoriaProfesional": "categoriaProfesional-003",
            "cuerpoProfesional": "cuerpoProfesional-003",
            "subcuerpoProfesional": "subcuerpoProfesional-003"
        }
    },
    {
        "personaRef": "user-004",
        "fechaNacimiento": "2000-01-04",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-004",
        "profesional": {
            "personaRef": "user-004",
            "categoriaProfesional": "categoriaProfesional-004",
            "cuerpoProfesional": "cuerpoProfesional-004",
            "subcuerpoProfesional": "subcuerpoProfesional-004"
        }
    },
    {
        "personaRef": "user-005",
        "fechaNacimiento": "2000-01-05",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-005",
        "profesional": {
            "personaRef": "user-005",
            "categoriaProfesional": "categoriaProfesional-005",
            "cuerpoProfesional": "cuerpoProfesional-005",
            "subcuerpoProfesional": "subcuerpoProfesional-005"
        }
    }
]</format>
                <args/>
            </payloadFactory>
            <send>
                <endpoint key="sgp-service"/>
            </send>
        </inSequence>
        <outSequence>
            <respond/>
        </outSequence>
        <faultSequence>
            <switch source="get-property('ERROR_CODE')">
                <case regex="101503|101504">
                    <payloadFactory media-type="json">
                        <format>[
    {
        "personaRef": "user-001",
        "fechaNacimiento": "2000-01-01",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-001",
        "profesional": {
            "personaRef": "user-001",
            "categoriaProfesional": "categoriaProfesional-001",
            "cuerpoProfesional": "cuerpoProfesional-001",
            "subcuerpoProfesional": "subcuerpoProfesional-001"
        }
    },
    {
        "personaRef": "user-002",
        "fechaNacimiento": "2000-01-02",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-002",
        "profesional": {
            "personaRef": "user-002",
            "categoriaProfesional": "categoriaProfesional-002",
            "cuerpoProfesional": "cuerpoProfesional-002",
            "subcuerpoProfesional": "subcuerpoProfesional-002"
        }
    },
    {
        "personaRef": "user-003",
        "fechaNacimiento": "2000-01-03",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-003",
        "profesional": {
            "personaRef": "user-003",
            "categoriaProfesional": "categoriaProfesional-003",
            "cuerpoProfesional": "cuerpoProfesional-003",
            "subcuerpoProfesional": "subcuerpoProfesional-003"
        }
    },
    {
        "personaRef": "user-004",
        "fechaNacimiento": "2000-01-04",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-004",
        "profesional": {
            "personaRef": "user-004",
            "categoriaProfesional": "categoriaProfesional-004",
            "cuerpoProfesional": "cuerpoProfesional-004",
            "subcuerpoProfesional": "subcuerpoProfesional-004"
        }
    },
    {
        "personaRef": "user-005",
        "fechaNacimiento": "2000-01-05",
        "nacionalidad": "es",
        "sexo": "M",
        "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
        "vinculacion": "vinculacion-005",
        "profesional": {
            "personaRef": "user-005",
            "categoriaProfesional": "categoriaProfesional-005",
            "cuerpoProfesional": "cuerpoProfesional-005",
            "subcuerpoProfesional": "subcuerpoProfesional-005"
        }
    }
]</format>
                        <args/>
                    </payloadFactory>
                </case>
                <default/>
            </switch>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="GET" url-mapping="/personas/fisica/persona">
        <inSequence>
            <!--This is generated API skeleton.-->
            <!--Business Logic Goes Here-->
            <payloadFactory media-type="json">
                <format>[
    {
        "personaRef": "user-001",
        "nombre": "nombre-001",
        "primerApellido": "primerApellido-001",
        "segundoApellido": "segundoApellido-001",
        "identificadorNumero": "00000001",
        "identificadorLetra": "A"
    },
    {
        "personaRef": "user-002",
        "nombre": "nombre-002",
        "primerApellido": "primerApellido-002",
        "segundoApellido": "segundoApellido-002",
        "identificadorNumero": "00000002",
        "identificadorLetra": "B"
    },
    {
        "personaRef": "user-003",
        "nombre": "nombre-003",
        "primerApellido": "primerApellido-003",
        "segundoApellido": "segundoApellido-003",
        "identificadorNumero": "00000003",
        "identificadorLetra": "C"
    },
    {
        "personaRef": "user-004",
        "nombre": "nombre-004",
        "primerApellido": "primerApellido-004",
        "segundoApellido": "segundoApellido-004",
        "identificadorNumero": "00000004",
        "identificadorLetra": "D"
    },
    {
        "personaRef": "user-005",
        "nombre": "nombre-005",
        "primerApellido": "primerApellido-005",
        "segundoApellido": "segundoApellido-005",
        "identificadorNumero": "00000005",
        "identificadorLetra": "E"
    }
]</format>
                <args/>
            </payloadFactory>
            <send>
                <endpoint key="sgp-service"/>
            </send>
        </inSequence>
        <outSequence>
            <respond/>
        </outSequence>
        <faultSequence>
            <switch source="get-property('ERROR_CODE')">
                <case regex="101503|101504">
                    <payloadFactory media-type="json">
                        <format>[
    {
        "personaRef": "user-001",
        "nombre": "nombre-001",
        "primerApellido": "primerApellido-001",
        "segundoApellido": "segundoApellido-001",
        "identificadorNumero": "00000001",
        "identificadorLetra": "A"
    },
    {
        "personaRef": "user-002",
        "nombre": "nombre-002",
        "primerApellido": "primerApellido-002",
        "segundoApellido": "segundoApellido-002",
        "identificadorNumero": "00000002",
        "identificadorLetra": "B"
    },
    {
        "personaRef": "user-003",
        "nombre": "nombre-003",
        "primerApellido": "primerApellido-003",
        "segundoApellido": "segundoApellido-003",
        "identificadorNumero": "00000003",
        "identificadorLetra": "C"
    },
    {
        "personaRef": "user-004",
        "nombre": "nombre-004",
        "primerApellido": "primerApellido-004",
        "segundoApellido": "segundoApellido-004",
        "identificadorNumero": "00000004",
        "identificadorLetra": "D"
    },
    {
        "personaRef": "user-005",
        "nombre": "nombre-005",
        "primerApellido": "primerApellido-005",
        "segundoApellido": "segundoApellido-005",
        "identificadorNumero": "00000005",
        "identificadorLetra": "E"
    }
]</format>
                        <args/>
                    </payloadFactory>
                </case>
                <default/>
            </switch>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="GET" url-mapping="/personas/fisica/persona/hasanypersonaref">
        <inSequence>
            <!--This is generated API skeleton.-->
            <!--Business Logic Goes Here-->
            <payloadFactory media-type="json">
                <format>[
    {
        "personaRef": "user-001",
        "nombre": "nombre-001",
        "primerApellido": "primerApellido-001",
        "segundoApellido": "segundoApellido-001",
        "identificadorNumero": "00000001",
        "identificadorLetra": "A"
    },
    {
        "personaRef": "user-002",
        "nombre": "nombre-002",
        "primerApellido": "primerApellido-002",
        "segundoApellido": "segundoApellido-002",
        "identificadorNumero": "00000002",
        "identificadorLetra": "B"
    },
    {
        "personaRef": "user-003",
        "nombre": "nombre-003",
        "primerApellido": "primerApellido-003",
        "segundoApellido": "segundoApellido-003",
        "identificadorNumero": "00000003",
        "identificadorLetra": "C"
    },
    {
        "personaRef": "user-004",
        "nombre": "nombre-004",
        "primerApellido": "primerApellido-004",
        "segundoApellido": "segundoApellido-004",
        "identificadorNumero": "00000004",
        "identificadorLetra": "D"
    },
    {
        "personaRef": "user-005",
        "nombre": "nombre-005",
        "primerApellido": "primerApellido-005",
        "segundoApellido": "segundoApellido-005",
        "identificadorNumero": "00000005",
        "identificadorLetra": "E"
    }
]</format>
                <args/>
            </payloadFactory>
            <send>
                <endpoint key="sgp-service"/>
            </send>
        </inSequence>
        <outSequence>
            <respond/>
        </outSequence>
        <faultSequence>
            <switch source="get-property('ERROR_CODE')">
                <case regex="101503|101504">
                    <payloadFactory media-type="json">
                        <format>[
    {
        "personaRef": "user-001",
        "nombre": "nombre-001",
        "primerApellido": "primerApellido-001",
        "segundoApellido": "segundoApellido-001",
        "identificadorNumero": "00000001",
        "identificadorLetra": "A"
    },
    {
        "personaRef": "user-002",
        "nombre": "nombre-002",
        "primerApellido": "primerApellido-002",
        "segundoApellido": "segundoApellido-002",
        "identificadorNumero": "00000002",
        "identificadorLetra": "B"
    },
    {
        "personaRef": "user-003",
        "nombre": "nombre-003",
        "primerApellido": "primerApellido-003",
        "segundoApellido": "segundoApellido-003",
        "identificadorNumero": "00000003",
        "identificadorLetra": "C"
    },
    {
        "personaRef": "user-004",
        "nombre": "nombre-004",
        "primerApellido": "primerApellido-004",
        "segundoApellido": "segundoApellido-004",
        "identificadorNumero": "00000004",
        "identificadorLetra": "D"
    },
    {
        "personaRef": "user-005",
        "nombre": "nombre-005",
        "primerApellido": "primerApellido-005",
        "segundoApellido": "segundoApellido-005",
        "identificadorNumero": "00000005",
        "identificadorLetra": "E"
    }
]</format>
                        <args/>
                    </payloadFactory>
                </case>
                <default/>
            </switch>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="GET" uri-template="/personas/fisica/persona/{personaRef}">
        <inSequence>
            <!--This is generated API skeleton.-->
            <property expression="get-property('uri.var.personaRef')" name="personaRef" scope="default" type="STRING"/>
            <!--Business Logic Goes Here-->
            <payloadFactory media-type="json">
                <format>{
    "personaRef": "user-001",
    "nombre": "nombre-001",
    "primerApellido": "primerApellido-001",
    "segundoApellido": "segundoApellido-001",
    "identificadorNumero": "00000001",
    "identificadorLetra": "A"
}</format>
                <args/>
            </payloadFactory>
            <send>
                <endpoint key="sgp-service"/>
            </send>
        </inSequence>
        <outSequence>
            <respond/>
        </outSequence>
        <faultSequence>
            <switch source="get-property('ERROR_CODE')">
                <case regex="101503|101504">
                    <payloadFactory media-type="json">
                        <format>{
    "personaRef": "user-001",
    "nombre": "nombre-001",
    "primerApellido": "primerApellido-001",
    "segundoApellido": "segundoApellido-001",
    "identificadorNumero": "00000001",
    "identificadorLetra": "A"
}</format>
                        <args/>
                    </payloadFactory>
                </case>
                <default/>
            </switch>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="GET" uri-template="/personas/fisica/{personaRef}">
        <inSequence>
            <!--This is generated API skeleton.-->
            <property expression="get-property('uri.var.personaRef')" name="personaRef" scope="default" type="STRING"/>
            <!--Business Logic Goes Here-->
            <payloadFactory media-type="json">
                <format>{
    "personaRef": "user-001",
    "fechaNacimiento": "2000-01-01",
    "nacionalidad": "es",
    "sexo": "M",
    "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
    "vinculacion": "vinculacion-001",
    "profesional": {
        "personaRef": "user-001",
        "categoriaProfesional": "categoriaProfesional-001",
        "cuerpoProfesional": "cuerpoProfesional-001",
        "subcuerpoProfesional": "subcuerpoProfesional-001"
    }
}</format>
                <args/>
            </payloadFactory>
            <send>
                <endpoint key="sgp-service"/>
            </send>
        </inSequence>
        <outSequence>
            <respond/>
        </outSequence>
        <faultSequence>
            <switch source="get-property('ERROR_CODE')">
                <case regex="101503|101504">
                    <payloadFactory media-type="json">
                        <format>{
    "personaRef": "user-001",
    "fechaNacimiento": "2000-01-01",
    "nacionalidad": "es",
    "sexo": "M",
    "tipoPersona": "PERSONAS_FISICAS_NIF_ESPANIOLES",
    "vinculacion": "vinculacion-001",
    "profesional": {
        "personaRef": "user-001",
        "categoriaProfesional": "categoriaProfesional-001",
        "cuerpoProfesional": "cuerpoProfesional-001",
        "subcuerpoProfesional": "subcuerpoProfesional-001"
    }
}</format>
                        <args/>
                    </payloadFactory>
                </case>
                <default/>
            </switch>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="GET" uri-template="/personas/fisica/{personaRef}/domicilio">
        <inSequence>
            <!--This is generated API skeleton.-->
            <property expression="get-property('uri.var.personaRef')" name="personaRef" scope="default" type="STRING"/>
            <!--Business Logic Goes Here-->
            <payloadFactory media-type="json">
                <format>{
    "personaRef": "user-006",
    "tipoVia": "calle",
    "nombreVia": "via-006",
    "numero": "006",
    "poblacion": "poblacion-006",
    "codigoPostal": "00006",
    "provincia": "provincia-006",
    "pais": "españa",
    "ampliacionDomicilio": "ampliacion-domicilio-006"
}</format>
                <args/>
            </payloadFactory>
            <send>
                <endpoint key="sgp-service"/>
            </send>
        </inSequence>
        <outSequence>
            <respond/>
        </outSequence>
        <faultSequence>
            <switch source="get-property('ERROR_CODE')">
                <case regex="101503|101504">
                    <payloadFactory media-type="json">
                        <format>{
    "personaRef": "user-006",
    "tipoVia": "calle",
    "nombreVia": "via-006",
    "numero": "006",
    "poblacion": "poblacion-006",
    "codigoPostal": "00006",
    "provincia": "provincia-006",
    "pais": "españa",
    "ampliacionDomicilio": "ampliacion-domicilio-006"
}</format>
                        <args/>
                    </payloadFactory>
                </case>
                <default/>
            </switch>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="GET" uri-template="/personas/fisica/{personaRef}/emails">
        <inSequence>
            <!--This is generated API skeleton.-->
            <property expression="get-property('uri.var.personaRef')" name="personaRef" scope="default" type="STRING"/>
            <!--Business Logic Goes Here-->
            <payloadFactory media-type="json">
                <format>[
    {
        "email": "user-006a@email.es",
        "tipoEmail": "tipo-001"
    },
    {
        "email": "user-006b@email.es",
        "tipoEmail": "tipo-002"
    }
]</format>
                <args/>
            </payloadFactory>
            <send>
                <endpoint key="sgp-service"/>
            </send>
        </inSequence>
        <outSequence>
            <respond/>
        </outSequence>
        <faultSequence>
            <switch source="get-property('ERROR_CODE')">
                <case regex="101503|101504">
                    <payloadFactory media-type="json">
                        <format>[
    {
        "email": "user-006a@email.es",
        "tipoEmail": "tipo-001"
    },
    {
        "email": "user-006b@email.es",
        "tipoEmail": "tipo-002"
    }
]</format>
                        <args/>
                    </payloadFactory>
                </case>
                <default/>
            </switch>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="GET" uri-template="/personas/fisica/{personaRef}/telefonos">
        <inSequence>
            <!--This is generated API skeleton.-->
            <property expression="get-property('uri.var.personaRef')" name="personaRef" scope="default" type="STRING"/>
            <!--Business Logic Goes Here-->
            <payloadFactory media-type="json">
                <format>[
    {
        "telefono": "000000011",
        "tipoTelefono": "tipo-001"
    },
    {
        "telefono": "000000012",
        "tipoTelefono": "tipo-002"
    }
]</format>
                <args/>
            </payloadFactory>
            <send>
                <endpoint key="sgp-service"/>
            </send>
        </inSequence>
        <outSequence>
            <respond/>
        </outSequence>
        <faultSequence>
            <switch source="get-property('ERROR_CODE')">
                <case regex="101503|101504">
                    <payloadFactory media-type="json">
                        <format>[
    {
        "telefono": "000000011",
        "tipoTelefono": "tipo-001"
    },
    {
        "telefono": "000000012",
        "tipoTelefono": "tipo-002"
    }
]</format>
                        <args/>
                    </payloadFactory>
                </case>
                <default/>
            </switch>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="GET" url-mapping="/personas/juridica">
        <inSequence>
            <!--This is generated API skeleton.-->
            <!--Business Logic Goes Here-->
            <payloadFactory media-type="json">
                <format>[
    {
        "personaRef": "user-051",
        "razonSocial": "razonsocial-051",
        "identificadorNumero": "00000051",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-001"
    },
    {
        "personaRef": "user-052",
        "razonSocial": "razonsocial-052",
        "identificadorNumero": "00000052",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-002"
    },
    {
        "personaRef": "user-053",
        "razonSocial": "razonsocial-053",
        "identificadorNumero": "00000053",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-003"
    },
    {
        "personaRef": "user-054",
        "razonSocial": "razonsocial-054",
        "identificadorNumero": "00000054",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-004"
    },
    {
        "personaRef": "user-055",
        "razonSocial": "razonsocial-055",
        "identificadorNumero": "00000055",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-005"
    }
]</format>
                <args/>
            </payloadFactory>
            <send>
                <endpoint key="sgp-service"/>
            </send>
        </inSequence>
        <outSequence>
            <respond/>
        </outSequence>
        <faultSequence>
            <switch source="get-property('ERROR_CODE')">
                <case regex="101503|101504">
                    <payloadFactory media-type="json">
                        <format>[
    {
        "personaRef": "user-051",
        "razonSocial": "razonsocial-051",
        "identificadorNumero": "00000051",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-001"
    },
    {
        "personaRef": "user-052",
        "razonSocial": "razonsocial-052",
        "identificadorNumero": "00000052",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-002"
    },
    {
        "personaRef": "user-053",
        "razonSocial": "razonsocial-053",
        "identificadorNumero": "00000053",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-003"
    },
    {
        "personaRef": "user-054",
        "razonSocial": "razonsocial-054",
        "identificadorNumero": "00000054",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-004"
    },
    {
        "personaRef": "user-055",
        "razonSocial": "razonsocial-055",
        "identificadorNumero": "00000055",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-005"
    }
]</format>
                        <args/>
                    </payloadFactory>
                </case>
                <default/>
            </switch>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="GET" url-mapping="/personas/juridica/hasanypersonaref">
        <inSequence>
            <!--This is generated API skeleton.-->
            <!--Business Logic Goes Here-->
            <payloadFactory media-type="json">
                <format>[
    {
        "personaRef": "user-051",
        "razonSocial": "razonsocial-051",
        "identificadorNumero": "00000051",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-001"
    },
    {
        "personaRef": "user-052",
        "razonSocial": "razonsocial-052",
        "identificadorNumero": "00000052",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-002"
    },
    {
        "personaRef": "user-053",
        "razonSocial": "razonsocial-053",
        "identificadorNumero": "00000053",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-003"
    },
    {
        "personaRef": "user-054",
        "razonSocial": "razonsocial-054",
        "identificadorNumero": "00000054",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-004"
    },
    {
        "personaRef": "user-055",
        "razonSocial": "razonsocial-055",
        "identificadorNumero": "00000055",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-005"
    }
]</format>
                <args/>
            </payloadFactory>
            <send>
                <endpoint key="sgp-service"/>
            </send>
        </inSequence>
        <outSequence>
            <respond/>
        </outSequence>
        <faultSequence>
            <switch source="get-property('ERROR_CODE')">
                <case regex="101503|101504">
                    <payloadFactory media-type="json">
                        <format>[
    {
        "personaRef": "user-051",
        "razonSocial": "razonsocial-051",
        "identificadorNumero": "00000051",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-001"
    },
    {
        "personaRef": "user-052",
        "razonSocial": "razonsocial-052",
        "identificadorNumero": "00000052",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-002"
    },
    {
        "personaRef": "user-053",
        "razonSocial": "razonsocial-053",
        "identificadorNumero": "00000053",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-003"
    },
    {
        "personaRef": "user-054",
        "razonSocial": "razonsocial-054",
        "identificadorNumero": "00000054",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-004"
    },
    {
        "personaRef": "user-055",
        "razonSocial": "razonsocial-055",
        "identificadorNumero": "00000055",
        "identificadorLetra": "A",
        "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
        "personaContacto": "user-005"
    }
]</format>
                        <args/>
                    </payloadFactory>
                </case>
                <default/>
            </switch>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="GET" uri-template="/personas/juridica/{personaRef}">
        <inSequence>
            <!--This is generated API skeleton.-->
            <property expression="get-property('uri.var.personaRef')" name="personaRef" scope="default" type="STRING"/>
            <!--Business Logic Goes Here-->
            <payloadFactory media-type="json">
                <format>{
    "personaRef": "user-056",
    "razonSocial": "razonsocial-056",
    "identificadorNumero": "00000056",
    "identificadorLetra": "A",
    "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
    "personaContacto": "user-006"
}</format>
                <args/>
            </payloadFactory>
            <send>
                <endpoint key="sgp-service"/>
            </send>
        </inSequence>
        <outSequence>
            <respond/>
        </outSequence>
        <faultSequence>
            <switch source="get-property('ERROR_CODE')">
                <case regex="101503|101504">
                    <payloadFactory media-type="json">
                        <format>{
    "personaRef": "user-056",
    "razonSocial": "razonsocial-056",
    "identificadorNumero": "00000056",
    "identificadorLetra": "A",
    "tipoPersona": "PERSONAS_JURIDICAS_ESPANIOLAS",
    "personaContacto": "user-006"
}</format>
                        <args/>
                    </payloadFactory>
                </case>
                <default/>
            </switch>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="GET" uri-template="/personas/juridica/{personaRef}/domicilio">
        <inSequence>
            <!--This is generated API skeleton.-->
            <property expression="get-property('uri.var.personaRef')" name="personaRef" scope="default" type="STRING"/>
            <!--Business Logic Goes Here-->
            <payloadFactory media-type="json">
                <format>{
    "personaRef": "user-056",
    "tipoVia": "calle",
    "nombreVia": "via-056",
    "numero": "056",
    "poblacion": "poblacion-056",
    "codigoPostal": "00056",
    "provincia": "provincia-056",
    "pais": "españa",
    "ampliacionDomicilio": "ampliacion-domicilio-056"
}</format>
                <args/>
            </payloadFactory>
            <send>
                <endpoint key="sgp-service"/>
            </send>
        </inSequence>
        <outSequence>
            <respond/>
        </outSequence>
        <faultSequence>
            <switch source="get-property('ERROR_CODE')">
                <case regex="101503|101504">
                    <payloadFactory media-type="json">
                        <format>{
    "personaRef": "user-056",
    "tipoVia": "calle",
    "nombreVia": "via-056",
    "numero": "056",
    "poblacion": "poblacion-056",
    "codigoPostal": "00056",
    "provincia": "provincia-056",
    "pais": "españa",
    "ampliacionDomicilio": "ampliacion-domicilio-056"
}</format>
                        <args/>
                    </payloadFactory>
                </case>
                <default/>
            </switch>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="GET" uri-template="/personas/juridica/{personaRef}/emails">
        <inSequence>
            <!--This is generated API skeleton.-->
            <property expression="get-property('uri.var.personaRef')" name="personaRef" scope="default" type="STRING"/>
            <!--Business Logic Goes Here-->
            <payloadFactory media-type="json">
                <format>[
    {
        "email": "user-056a@email.es",
        "tipoEmail": "tipo-001"
    },
    {
        "email": "user-056b@email.es",
        "tipoEmail": "tipo-002"
    }
]</format>
                <args/>
            </payloadFactory>
            <send>
                <endpoint key="sgp-service"/>
            </send>
        </inSequence>
        <outSequence>
            <respond/>
        </outSequence>
        <faultSequence>
            <switch source="get-property('ERROR_CODE')">
                <case regex="101503|101504">
                    <payloadFactory media-type="json">
                        <format>[
    {
        "email": "user-056a@email.es",
        "tipoEmail": "tipo-001"
    },
    {
        "email": "user-056b@email.es",
        "tipoEmail": "tipo-002"
    }
]</format>
                        <args/>
                    </payloadFactory>
                </case>
                <default/>
            </switch>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="GET" uri-template="/personas/juridica/{personaRef}/telefonos">
        <inSequence>
            <!--This is generated API skeleton.-->
            <property expression="get-property('uri.var.personaRef')" name="personaRef" scope="default" type="STRING"/>
            <!--Business Logic Goes Here-->
            <payloadFactory media-type="json">
                <format>[
    {
        "telefono": "0000000101",
        "tipoTelefono": "tipo-001"
    },
    {
        "telefono": "0000000102",
        "tipoTelefono": "tipo-002"
    }
]</format>
                <args/>
            </payloadFactory>
            <send>
                <endpoint key="sgp-service"/>
            </send>
        </inSequence>
        <outSequence>
            <respond/>
        </outSequence>
        <faultSequence>
            <switch source="get-property('ERROR_CODE')">
                <case regex="101503|101504">
                    <payloadFactory media-type="json">
                        <format>[
    {
        "telefono": "0000000101",
        "tipoTelefono": "tipo-001"
    },
    {
        "telefono": "0000000102",
        "tipoTelefono": "tipo-002"
    }
]</format>
                        <args/>
                    </payloadFactory>
                </case>
                <default/>
            </switch>
            <respond/>
        </faultSequence>
    </resource>
</api>
