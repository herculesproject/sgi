<data name="sge-service" serviceGroup="org.crue.hercules.sgi.esb.sge.dataservice" transports="https http">
  <description/>
  
  <!-- ****************************************************** -->
  <!-- CODIGO ECONOMICO -->
  <!-- ****************************************************** -->
  
  <!-- findAllCodigoEconomicosGastos -->
  <resource method="GET" path="/codigoeconomicos/gastos" disableStreaming="true">
    <description />
    <call-query href="findAllCodigoEconomicosGastos">
      <with-param name="filterQuery" query-param="filterQuery" />
      <with-param name="sortQuery" query-param="sortQuery" />
      <with-param name="paginationQuery" query-param="paginationQuery" />
    </call-query>
  </resource>

  <query id="findAllCodigoEconomicosGastos" useConfig="sgeDataSource">
    <sql>
      SELECT 
        id, codigo, fechaInicio, fechaFin, tipo
      FROM (
        SELECT 
          ce.id,
          ce.codigo AS codigo,
          ce.fecha_inicio AS fechaInicio,
          ce.fecha_fin AS fechaFin,
          ce.tipo AS tipo
        FROM codigo_economico ce
      ) AS query
      WHERE :filterQuery AND tipo='gasto' :sortQuery :paginationQuery
    </sql>
    <param name="filterQuery" paramType="SCALAR" sqlType="QUERY_STRING" defaultValue="true" type="IN" />
    <param name="sortQuery" paramType="SCALAR" sqlType="QUERY_STRING" defaultValue=" " type="IN" />
    <param name="paginationQuery" paramType="SCALAR" sqlType="QUERY_STRING" defaultValue=" " type="IN" />
    <result outputType="json">
      {
        "result": {
          "items": [
            {
              "codigoEconomicoRef": "$id",
              "codigo": "$codigo",
              "fechaInicio": "$fechaInicio",
              "fechaFin": "$fechaFin"
            }
          ]
        }
      }
    </result>
  </query>

  <!-- countAllCodigoEconomicosGastos -->
  <resource method="GET" path="/codigoeconomicos/gastos/count">
    <description />
    <call-query href="countAllCodigoEconomicosGastos">
      <with-param name="filterQuery" query-param="filterQuery" />
    </call-query>
  </resource>

  <query id="countAllCodigoEconomicosGastos" useConfig="sgeDataSource">
    <sql>
      SELECT 
        count(id) AS count
      FROM (
        SELECT 
          ce.id,
          ce.codigo AS codigo,
          ce.fecha_inicio AS fechaInicio,
          ce.fecha_fin AS fechaFin,
          ce.tipo AS tipo
        FROM codigo_economico ce
      ) AS query
      WHERE :filterQuery AND tipo='gasto'
    </sql>
    <param name="filterQuery" paramType="SCALAR" sqlType="QUERY_STRING" defaultValue="true" type="IN" />
    <result outputType="json">
      {
        "result": {
          "count":"$count"
        }
      }
    </result>
  </query>
  
  
  
  <!-- findAllCodigoEconomicosIngresos -->
  <resource method="GET" path="/codigoeconomicos/ingresos" disableStreaming="true">
    <description />
    <call-query href="findAllCodigoEconomicosIngresos">
      <with-param name="filterQuery" query-param="filterQuery" />
      <with-param name="sortQuery" query-param="sortQuery" />
      <with-param name="paginationQuery" query-param="paginationQuery" />
    </call-query>
  </resource>

  <query id="findAllCodigoEconomicosIngresos" useConfig="sgeDataSource">
    <sql>
      SELECT 
        id, codigo, fechaInicio, fechaFin, tipo
      FROM (
        SELECT 
          ce.id,
          ce.codigo AS codigo,
          ce.fecha_inicio AS fechaInicio,
          ce.fecha_fin AS fechaFin,
          ce.tipo AS tipo
        FROM codigo_economico ce
      ) AS query
      WHERE :filterQuery AND tipo='ingreso' :sortQuery :paginationQuery
    </sql>
    <param name="filterQuery" paramType="SCALAR" sqlType="QUERY_STRING" defaultValue="true" type="IN" />
    <param name="sortQuery" paramType="SCALAR" sqlType="QUERY_STRING" defaultValue=" " type="IN" />
    <param name="paginationQuery" paramType="SCALAR" sqlType="QUERY_STRING" defaultValue=" " type="IN" />
    <result outputType="json">
      {
        "result": {
          "items": [
            {
              "codigoEconomicoRef": "$id",
              "codigo": "$codigo",
              "fechaInicio": "$fechaInicio",
              "fechaFin": "$fechaFin"
            }
          ]
        }
      }
    </result>
  </query>

  <!-- countAllCodigoEconomicosIngresos -->
  <resource method="GET" path="/codigoeconomicos/ingresos/count">
    <description />
    <call-query href="countAllCodigoEconomicosIngresos">
      <with-param name="filterQuery" query-param="filterQuery" />
    </call-query>
  </resource>

  <query id="countAllCodigoEconomicosIngresos" useConfig="sgeDataSource">
    <sql>
      SELECT 
        count(id) AS count
      FROM (
        SELECT 
          ce.id,
          ce.codigo AS codigo,
          ce.fecha_inicio AS fechaInicio,
          ce.fecha_fin AS fechaFin,
          ce.tipo AS tipo
        FROM codigo_economico ce
      ) AS query
      WHERE :filterQuery AND tipo='ingreso'
    </sql>
    <param name="filterQuery" paramType="SCALAR" sqlType="QUERY_STRING" defaultValue="true" type="IN" />
    <result outputType="json">
      {
        "result": {
          "count":"$count"
        }
      }
    </result>
  </query>
  
  
  
  <!-- findCodigoEconomicoById -->
  <resource method="GET" path="/codigoeconomicos/{id}">
    <description />
    <call-query href="findCodigoEconomicoById">
      <with-param name="id" query-param="id" />
    </call-query>
  </resource>

  <query id="findCodigoEconomicoById" useConfig="sgeDataSource">
    <sql>
      SELECT
        ce.id,
        ce.codigo AS codigo,
        ce.fecha_inicio AS fechaInicio,
        ce.fecha_fin AS fechaFin,
        ce.tipo AS tipo
      FROM codigo_economico ce
      WHERE ce.id = :id
    </sql>
    <param name="id" paramType="SCALAR" sqlType="STRING" defaultValue="0" type="IN" />
    <result outputType="json">
      {
        "result": {
          "codigoEconomicoRef": "$id",
          "codigo": "$codigo",
          "fechaInicio": "$fechaInicio",
          "fechaFin": "$fechaFin"
        }
      }
    </result>
  </query>
    
   <config id="sgeDataSource">
    <property name="org.wso2.ws.dataservice.user">$SYSTEM:SGI_ESB_SGE_DB_USER</property>
    <property name="org.wso2.ws.dataservice.password">$SYSTEM:SGI_ESB_SGE_DB_PASSWORD</property>
    <property name="org.wso2.ws.dataservice.protocol">$SYSTEM:SGI_ESB_SGE_DB_PROTOCOL</property>
    <property name="org.wso2.ws.dataservice.driver">$SYSTEM:SGI_ESB_SGE_DB_DRIVER</property>
    <property name="org.wso2.ws.dataservice.minpoolsize"/>
    <property name="org.wso2.ws.dataservice.maxpoolsize"/>
    <property name="org.wso2.ws.dataservice.validation_query"/>
  </config>
</data>
